String cpfCnpj = vars.get("cpf_cnpj"); // Obter o valor da variável "cpf_cnpj"

if (cpfCnpj != null) {
    int length = cpfCnpj.length();
    if (length < 15) {
        // Calcule o número de zeros que precisam ser adicionados
        int zerosToAdd = 15 - length;

        // Crie uma string com zeros à esquerda
        StringBuilder zeros = new StringBuilder();
        for (int i = 0; i < zerosToAdd; i++) {
            zeros.append("0");
        }

        // Concatene os zeros à esquerda com o valor original
        String formattedCpfCnpj = zeros.toString() + cpfCnpj;

        // Defina a variável "cpf_cnpj" para o valor formatado
        vars.put("cpf_cnpj", formattedCpfCnpj);
    }
}


String cpfCnpj = vars.get("cpf_cnpj"); // Obter o valor da variável "cpf_cnpj"

if (cpfCnpj != null) {
    int length = cpfCnpj.length();
    if (length < 15) {
        // Calcule o número de zeros que precisam ser adicionados
        int zerosToAdd = 15 - length;

        // Verifique se o valor original já contém 15 dígitos
        if (zerosToAdd > 0) {
            // Crie uma string com zeros à esquerda
            StringBuilder zeros = new StringBuilder();
            for (int i = 0; i < zerosToAdd; i++) {
                zeros.append("0");
            }

            // Concatene os zeros à esquerda com o valor original
            String formattedCpfCnpj = zeros.toString() + cpfCnpj;

            // Defina a variável "cpf_cnpj" para o valor formatado
            vars.put("cpf_cnpj", formattedCpfCnpj);
        }
    }
}



String pessoas = vars.get("pessoas");
String[] pessoasArray = pessoas.split("\\},\\{"); // Divide as pessoas em um array

String scriptHome = FileServer.getFileServer().getBaseDir();
String csvFileName = scriptHome + "\\massa.csv";

// Cabeçalho do CSV
String header = "nome,sobrenome,rua,numero";

// Escreva o cabeçalho no arquivo CSV
FileOutputStream f = new FileOutputStream(csvFileName, true);
PrintStream p = new PrintStream(f);
p.println(header);

// Percorra as pessoas e escreva os dados no arquivo CSV
for (String pessoa : pessoasArray) {
    pessoa = pessoa.replaceAll("[{}\"]", ""); // Remova chaves e aspas
    String[] dados = pessoa.split(","); // Divida os dados em um array
    String linha = String.join(",", dados); // Crie a linha do CSV
    p.println(linha);
}

// Feche o arquivo
p.close();
f.close();



{"nome":"(.*?)","sobrenome":"(.*?)","rua":(.*?),"numero":(\d+)}


String jsonResponse = vars.get("jsonResponse");
JSONArray jsonArray = new JSONArray(jsonResponse);

String scriptHome = FileServer.getFileServer().getBaseDir();
String csvFileName = scriptHome + "\\massa.csv";

// Cabeçalho do CSV
String header = "num_cpf_cnpj,agencia,conta,dac";

// Escreva o cabeçalho no arquivo CSV
FileOutputStream f = new FileOutputStream(csvFileName, true);
PrintStream p = new PrintStream(f);
p.println(header);

// Percorra os objetos JSON e escreva os dados no arquivo CSV
for (int i = 0; i < jsonArray.length(); i++) {
    JSONObject jsonObject = jsonArray.getJSONObject(i);
    String numCpfCnpj = jsonObject.getString("num_cpf_cnpj");
    String agencia = jsonObject.getString("agencia");
    String conta = jsonObject.getString("conta");
    String dac = jsonObject.getString("dac");

    // Construa a linha do CSV
    String linha = numCpfCnpj + "," + agencia + "," + conta + "," + dac;

    // Escreva a linha no arquivo CSV
    p.println(linha);
}

// Feche o arquivo
p.close();
f.close();


________________________________________________
netsh advfirewall firewall add rule name="Block TypeItIn Inbound" dir=in action=block program="C:\Program Files (x86)\TypeItIn\TypeItIn.exe" enable=yes protocol=TCP

netsh advfirewall firewall add rule name="Block TypeItIn Outbound" dir=out action=block program="C:\Program Files (x86)\TypeItIn\TypeItIn.exe" enable=yes protocol=TCP

Typeshortcut
OjfDdtYHHmwxysbLX41PM+
NiHMvd0HQ6gsQIS9n8Lyfk
_______________________________________________________________
Set WshShell = WScript.CreateObject("WScript.Shell")

' Run Notepad
WshShell.Run "notepad"
WScript.Sleep 300

' Send keystrokes to Notepad
WshShell.SendKeys "Do not Move the mouse!!! Cloking time Automation!!{ENTER}"
WScript.Sleep 1000
WshShell.SendKeys "{LEFTCLICK 360,1060}"
WScript.Sleep 2000
WshShell.SendKeys "{LEFTCLICK 620,102}"
WScript.Sleep 2000
WshShell.SendKeys "{LEFTCLICK 84,411}"
WScript.Sleep 2000
WshShell.SendKeys "{LEFTCLICK 930,98}"
WScript.Sleep 1000
WshShell.SendKeys "{LEFTCLICK 34,434}"
WScript.Sleep 1000
WshShell.SendKeys "{LEFTCLICK 1898,22}"
WScript.Sleep 2000
WshShell.SendKeys "{ENTER}Done!!!!"
WScript.Sleep 2000
WshShell.SendKeys "^a"
WScript.Sleep 5
WshShell.SendKeys "n"
WScript.Sleep 5
WshShell.SendKeys "{LEFTCLICK 36,233 2}"
__________________________________________________

{Run Notepad}{Delay 300}Do not Move the mouse!!! Cloking time Automation!!{Enter}{Delay 1000}{MouseLeftClick 360,1060}{Delay 2000}{MouseLeftClick 620,102}{Delay 2000}{MouseLeftClick 84,411}{Delay 2000}{MouseLeftClick 930,98}{Delay 1000}{MouseLeftClick 34,434}{Delay 1000}{MouseLeftClick 1898,22}{Activate *Sem título - Bloco de Notas}{Enter}{Speed 5}Done!!!!{Delay 2000}{Alt a}s{Delay 5}n



@echo off
powershell -command "[void] [System.Reflection.Assembly]::LoadWithPartialName('System.Windows.Forms'); [System.Windows.Forms.SendKeys]::SendWait('^+a')"

@echo off
cscript //nologo script.vbs
----------------------------------------------------------

// Initialize an array to store names
var namesArray = [];
var name;

// Iterate through each row until no more names are found
while ((name = context.variableManager.getValue("Names.name")) !== "<NO VALUE>") {
    // Add the name to the array
    namesArray.push(name);
}

// Convert the array to a single string, if needed
var namesString = namesArray.join(";");

// Log the result (for debugging purposes)
logger.info("Names: " + namesString);

// Store the result in a Neoload variable if needed
context.variableManager.setValue("AllNamesString", namesString);

// Get the value of WinUser
var winUser = context.variableManager.getValue("WinUser");

// Log the value of WinUser for debugging purposes
logger.info("WinUser: " + winUser);

// Split the namesString into an array of lines
var lines = namesString.split(";");

// Iterate through each line
for (var i = 0; i < lines.length; i++) {
    // Split each line into its components
    var components = lines[i].split(",");
    var user = components[0];
    var email = components[1];
    var name = components[2];
    
    // Compare the user value with WinUser
    if (user === winUser) {
        // Store the matched values as separate variables
        context.variableManager.setValue("MatchedUser", user);
        context.variableManager.setValue("MatchedEmail", email);
        context.variableManager.setValue("MatchedName", name);
        
        // Log the matched values for debugging purposes
        logger.info("Matched User: " + user + ", Email: " + email + ", Name: " + name);
        
        // Break the loop since we found the match
        break;
    }
}


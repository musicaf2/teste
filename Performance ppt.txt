String cpfCnpj = vars.get("cpf_cnpj"); // Obter o valor da variável "cpf_cnpj"

if (cpfCnpj != null) {
    int length = cpfCnpj.length();
    if (length < 15) {
        // Calcule o número de zeros que precisam ser adicionados
        int zerosToAdd = 15 - length;

        // Crie uma string com zeros à esquerda
        StringBuilder zeros = new StringBuilder();
        for (int i = 0; i < zerosToAdd; i++) {
            zeros.append("0");
        }

        // Concatene os zeros à esquerda com o valor original
        String formattedCpfCnpj = zeros.toString() + cpfCnpj;

        // Defina a variável "cpf_cnpj" para o valor formatado
        vars.put("cpf_cnpj", formattedCpfCnpj);
    }
}


String cpfCnpj = vars.get("cpf_cnpj"); // Obter o valor da variável "cpf_cnpj"

if (cpfCnpj != null) {
    int length = cpfCnpj.length();
    if (length < 15) {
        // Calcule o número de zeros que precisam ser adicionados
        int zerosToAdd = 15 - length;

        // Verifique se o valor original já contém 15 dígitos
        if (zerosToAdd > 0) {
            // Crie uma string com zeros à esquerda
            StringBuilder zeros = new StringBuilder();
            for (int i = 0; i < zerosToAdd; i++) {
                zeros.append("0");
            }

            // Concatene os zeros à esquerda com o valor original
            String formattedCpfCnpj = zeros.toString() + cpfCnpj;

            // Defina a variável "cpf_cnpj" para o valor formatado
            vars.put("cpf_cnpj", formattedCpfCnpj);
        }
    }
}



String pessoas = vars.get("pessoas");
String[] pessoasArray = pessoas.split("\\},\\{"); // Divide as pessoas em um array

String scriptHome = FileServer.getFileServer().getBaseDir();
String csvFileName = scriptHome + "\\massa.csv";

// Cabeçalho do CSV
String header = "nome,sobrenome,rua,numero";

// Escreva o cabeçalho no arquivo CSV
FileOutputStream f = new FileOutputStream(csvFileName, true);
PrintStream p = new PrintStream(f);
p.println(header);

// Percorra as pessoas e escreva os dados no arquivo CSV
for (String pessoa : pessoasArray) {
    pessoa = pessoa.replaceAll("[{}\"]", ""); // Remova chaves e aspas
    String[] dados = pessoa.split(","); // Divida os dados em um array
    String linha = String.join(",", dados); // Crie a linha do CSV
    p.println(linha);
}

// Feche o arquivo
p.close();
f.close();



{"nome":"(.*?)","sobrenome":"(.*?)","rua":(.*?),"numero":(\d+)}


String jsonResponse = vars.get("jsonResponse");
JSONArray jsonArray = new JSONArray(jsonResponse);

String scriptHome = FileServer.getFileServer().getBaseDir();
String csvFileName = scriptHome + "\\massa.csv";

// Cabeçalho do CSV
String header = "num_cpf_cnpj,agencia,conta,dac";

// Escreva o cabeçalho no arquivo CSV
FileOutputStream f = new FileOutputStream(csvFileName, true);
PrintStream p = new PrintStream(f);
p.println(header);

// Percorra os objetos JSON e escreva os dados no arquivo CSV
for (int i = 0; i < jsonArray.length(); i++) {
    JSONObject jsonObject = jsonArray.getJSONObject(i);
    String numCpfCnpj = jsonObject.getString("num_cpf_cnpj");
    String agencia = jsonObject.getString("agencia");
    String conta = jsonObject.getString("conta");
    String dac = jsonObject.getString("dac");

    // Construa a linha do CSV
    String linha = numCpfCnpj + "," + agencia + "," + conta + "," + dac;

    // Escreva a linha no arquivo CSV
    p.println(linha);
}

// Feche o arquivo
p.close();
f.close();
